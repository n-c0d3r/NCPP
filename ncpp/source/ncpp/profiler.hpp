#pragma once

/** @file ncpp/mem.hpp
*	@brief Contains the memory management utilities.
*/



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#pragma region Includes

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <ncpp/prerequisites.hpp>

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <ncpp/utilities/unique_lock.hpp>
#include <ncpp/log.hpp>
#include <ncpp/iostream.hpp>

#pragma endregion



 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



namespace ncpp {

	class profile {

	public:
		using output_function_type = void(const eastl::string& name, u64 nanoseconds);



	private:
		eastl::string content_;
		output_function_type* output_function_p_ = 0;
		eastl::chrono::system_clock::time_point start_;



	public:
		inline const eastl::string& content() const { return content_; }
		inline output_function_type* output_function_p() const { return output_function_p_; }



	public:
		profile(
			const eastl::string& content = "",
			output_function_type* output_function_p = [](const eastl::string& content, u64 nanoseconds) {

				std::cout << content.c_str() << cout_nanoseconds(nanoseconds) << cout_lowlight(" (nanoseconds)") << std::endl;

			}
		) :
			content_(content),
			output_function_p_(output_function_p)
		{

			start_ = eastl::chrono::high_resolution_clock::now();

		}
		~profile() {

			output_function_p_(
				content_, 
				eastl::chrono::duration_cast<eastl::chrono::nanoseconds>(
					eastl::chrono::high_resolution_clock::now() - start_
				).count()
			);

		}

	};



#ifdef NCPP_ENABLE_SCOPED_PROFILE
#define NCPP_SCOPED_PROFILE(Name, Content) ncpp::profile Name##_profile = ncpp::profile(Content)
#else
#define NCPP_SCOPED_PROFILE(Name) ;
#endif

}

